version: "3.7"

### Logging config for Airbyte
x-logging: &default-logging
  options:
    max-size: "100m"
    max-file: "5"
  driver: json-file

services:

### Shared services
    postgres:
        environment:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres_passwd
          POSTGRES_USER: postgres
          POSTGRES_MULTIPLE_DATABASES: "prefect_server,prefect,prefect-passwd;airbyte_db,airbyte,airbyte-passwd"
        healthcheck:
          interval: 10s
          retries: 60
          start_period: 2s
          test: pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER} || exit 1
          timeout: 2s
        image: postgres:13
        volumes:
          - etl-db:/var/lib/postgresql/data
          - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        networks:
          etl-services: null
        expose:
          - "5432"
        ports:
        - published: 5435
          target: 5432
        restart: always

### Prefect services
    apollo:
      command: bash -c "./post-start.sh && npm run serve"
      depends_on:
      - graphql
      - hasura
      environment:
        GRAPHQL_SERVICE_HOST: http://graphql
        GRAPHQL_SERVICE_PORT: 4201
        HASURA_API_URL: http://hasura:3000/v1alpha1/graphql
        PREFECT_API_HEALTH_URL: http://graphql:4201/health
        PREFECT_API_URL: http://graphql:4201/graphql/
        PREFECT_SERVER__TELEMETRY__ENABLED: "true"
      healthcheck:
        interval: 10s
        retries: 60
        start_period: 1s
        test: curl --fail --silent "http://apollo:4200/.well-known/apollo/server-health"
          &> /dev/null || exit 1
        timeout: 2s
      image: prefecthq/apollo:core-1.1.0
      networks:
        etl-services: null
      ports:
      - published: 4200
        target: 4200
      restart: always

    graphql:
      command: bash -c "prefect-server database upgrade -y && python src/prefect_server/services/graphql/server.py"
      depends_on:
      - hasura
      environment:
        PREFECT_CORE_VERSION: 1.1.0
        PREFECT_SERVER_DB_CMD: prefect-server database upgrade -y
        PREFECT_SERVER__DATABASE__CONNECTION_URL: postgresql://prefect:prefect-passwd@postgres:5432/prefect_server
        PREFECT_SERVER__HASURA__ADMIN_SECRET: hasura-secret-admin-secret
        PREFECT_SERVER__HASURA__HOST: hasura
      healthcheck:
        interval: 20s
        retries: 60
        start_period: 1s
        test: curl --fail --silent "http://graphql:4201/health" &> /dev/null || exit
          1
        timeout: 2s
      image: prefecthq/server:core-1.1.0
      networks:
        etl-services: null
      ports:
      - published: 4201
        target: 4201
      restart: always

    hasura:
      command: graphql-engine serve
      depends_on:
      - postgres
      environment:
        HASURA_GRAPHQL_DATABASE_URL: postgresql://prefect:prefect-passwd@postgres:5432/prefect_server
        HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
        HASURA_GRAPHQL_LOG_LEVEL: warn
        HASURA_GRAPHQL_QUERY_PLAN_CACHE_SIZE: 100
        HASURA_GRAPHQL_SERVER_PORT: '3000'
        HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE: "true"
      healthcheck:
        interval: 10s
        retries: 60
        start_period: 1s
        test: wget -O - http://hasura:$${HASURA_GRAPHQL_SERVER_PORT}/healthz &>/dev/null
          || exit 1
        timeout: 2s
      image: hasura/graphql-engine:v2.1.1
      networks:
        etl-services: null
      ports:
      - published: 3000
        target: 3000
      restart: always

    towel:
      command: python src/prefect_server/services/towel/__main__.py
      depends_on:
      - graphql
      environment:
        PREFECT_SERVER__HASURA__ADMIN_SECRET: hasura-secret-admin-secret
        PREFECT_SERVER__HASURA__HOST: hasura
      image: prefecthq/server:core-1.1.0
      networks:
        etl-services: null
      restart: always

    ui:
      command: /intercept.sh
      depends_on:
      - apollo
      environment:
        PREFECT_SERVER__APOLLO_URL: http://localhost:4200/graphql
      healthcheck:
        interval: 30s
        retries: 3
        test: curl --fail --silent --head "http://ui:8080/" &> /dev/null || exit 1
        timeout: 5s
      image: prefecthq/ui:core-1.1.0
      networks:
        etl-services: null
      ports:
      - published: 8080
        target: 8080
      restart: always

    agent:
      command: /root/prefect/setup.sh
      depends_on:
        - apollo
      image: prefecthq/prefect:core-1.1.0
      volumes:
        - ./prefect:/root/prefect
        - ../prefect:/root/flows
        - ~/.ssh:/root/.ssh
      networks:
        etl-services: null
      ### Environment variables that need to be adapted
      environment:
        - GIT_USER
        - GIT_HOST
        - GIT_ORG_NAME
        - GIT_REPO_NAME
        - GIT_PRIVATE_KEY
        - PREFECT_PROJECT_NAME
        - PREFECT__CONTEXT__SECRETS__SNOWFLAKE_ACCOUNT
        - PREFECT__CONTEXT__SECRETS__SNOWFLAKE_USER
        - PREFECT__CONTEXT__SECRETS__SNOWFLAKE_PASSWORD
        - PREFECT__CONTEXT__SECRETS__SNOWFLAKE_ROLE
        - PREFECT__CONTEXT__SECRETS__SNOWFLAKE_WAREHOUSE
        - PREFECT__CONTEXT__SECRETS__POSTGRES_PREFECT_PORT
        - PREFECT__CONTEXT__SECRETS__POSTGRES_PREFECT_USER
        - PREFECT__CONTEXT__SECRETS__POSTGRES_PREFECT_PASSWD
        - PREFECT__CONTEXT__SECRETS__POSTGRES_PREFECT_HOST
        - PREFECT__CONTEXT__SECRETS__POSTGRES_PREFECT_DATABASE
        # Separate secrets for each flow/source
        - PREFECT__CONTEXT__SECRETS__SNOWFLAKE_<SOURCE>_DATABASE
        - PREFECT__CONTEXT__SECRETS__SNOWFLAKE_<SOURCE>_SCHEMA
      restart: always


### Airbyte services
    init:
      image: airbyte/init:0.35.62-alpha
      logging: *default-logging
      container_name: init
      command: /bin/sh -c "./scripts/create_mount_directories.sh /local_parent /tmp /tmp/airbyte_local"
      environment:
        - LOCAL_ROOT=/tmp/airbyte_local
        - HACK_LOCAL_ROOT_PARENT=/tmp
      volumes:
        - /tmp:/local_parent
    
    bootloader:
      image: airbyte/bootloader:0.35.62-alpha
      logging: *default-logging
      container_name: airbyte-bootloader
      networks:
          etl-services: null
      environment:
        - AIRBYTE_VERSION=0.35.62-alpha
        - CONFIG_DATABASE_PASSWORD=airbyte-passwd
        - CONFIG_DATABASE_URL=jdbc:postgresql://postgres:5432/airbyte_db
        - CONFIG_DATABASE_USER=airbyte
        - DATABASE_PASSWORD=airbyte-passwd
        - DATABASE_URL=jdbc:postgresql://postgres:5432/airbyte_db
        - DATABASE_USER=airbyte
        - LOG_LEVEL=INFO
        - RUN_DATABASE_MIGRATION_ON_STARTUP=${RUN_DATABASE_MIGRATION_ON_STARTUP}
    
    scheduler:
      image: airbyte/scheduler:0.35.62-alpha
      logging: *default-logging
      container_name: airbyte-scheduler
      restart: unless-stopped
      environment:
        - AIRBYTE_ROLE=${AIRBYTE_ROLE:-}
        - AIRBYTE_VERSION=0.35.62-alpha
        - CONFIG_DATABASE_PASSWORD=airbyte-passwd
        - CONFIG_DATABASE_URL=jdbc:postgresql://postgres:5432/airbyte_db
        - CONFIG_DATABASE_USER=airbyte
        - CONFIG_ROOT=/data
        - DATABASE_PASSWORD=airbyte-passwd
        - DATABASE_URL=jdbc:postgresql://postgres:5432/airbyte_db
        - DATABASE_USER=airbyte
        - INTERNAL_API_HOST=airbyte-server:8001
        - JOB_MAIN_CONTAINER_CPU_LIMIT=
        - JOB_MAIN_CONTAINER_CPU_REQUEST=
        - JOB_MAIN_CONTAINER_MEMORY_LIMIT=
        - JOB_MAIN_CONTAINER_MEMORY_REQUEST=
        - LOCAL_ROOT=/tmp/airbyte_local
        - LOCAL_DOCKER_MOUNT=/tmp/airbyte_local
        - LOG_LEVEL=INFO
        - NEW_SCHEDULER=false
        - SECRET_PERSISTENCE=${SECRET_PERSISTENCE}
        - SYNC_JOB_MAX_ATTEMPTS=3
        - SYNC_JOB_MAX_TIMEOUT_DAYS=3
        - SUBMITTER_NUM_THREADS=10
        - TEMPORAL_HOST=airbyte-temporal:7233
        - TRACKING_STRATEGY=segment
        - WEBAPP_URL=http://localhost:8000/
        - WORKER_ENVIRONMENT=${WORKER_ENVIRONMENT}
        - WORKSPACE_DOCKER_MOUNT=airbyte_workspace
        - WORKSPACE_ROOT=/tmp/workspace
      networks:
          etl-services: null
      volumes:
        - airbyte-data:/data
        - airbyte-workspace:/tmp/workspace
        - /tmp/airbyte_local:/tmp/airbyte_local
    
    worker:
      image: airbyte/worker:0.35.62-alpha
      logging: *default-logging
      container_name: airbyte-worker
      restart: unless-stopped
      environment:
        - AIRBYTE_VERSION=0.35.62-alpha
        - AUTO_DISABLE_FAILING_CONNECTIONS=false
        - CONFIG_DATABASE_PASSWORD=airbyte-passwd
        - CONFIG_DATABASE_URL=jdbc:postgresql://postgres:5432/airbyte_db
        - CONFIG_DATABASE_USER=airbyte
        - CONFIG_ROOT=/data
        - DATABASE_PASSWORD=airbyte-passwd
        - DATABASE_URL=jdbc:postgresql://postgres:5432/airbyte_db
        - DATABASE_USER=airbyte
        - JOB_MAIN_CONTAINER_CPU_LIMIT=
        - JOB_MAIN_CONTAINER_CPU_REQUEST=
        - JOB_MAIN_CONTAINER_MEMORY_LIMIT=
        - JOB_MAIN_CONTAINER_MEMORY_REQUEST=
        - LOCAL_DOCKER_MOUNT=/tmp/airbyte_local
        - LOCAL_ROOT=/tmp/airbyte_local
        - LOG_LEVEL=INFO
        - MAX_CHECK_WORKERS=5
        - MAX_DISCOVER_WORKERS=5
        - MAX_SPEC_WORKERS=5
        - MAX_SYNC_WORKERS=5
        - SECRET_PERSISTENCE=${SECRET_PERSISTENCE}
        - SYNC_JOB_MAX_ATTEMPTS=3
        - SYNC_JOB_MAX_TIMEOUT_DAYS=3
        - TEMPORAL_HOST=airbyte-temporal:7233
        - TRACKING_STRATEGY=segment
        - WEBAPP_URL=http://localhost:8000/
        - WORKER_ENVIRONMENT=${WORKER_ENVIRONMENT}
        - WORKSPACE_DOCKER_MOUNT=airbyte_workspace
        - WORKSPACE_ROOT=/tmp/workspace
      networks:
          etl-services: null
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - airbyte-workspace:/tmp/workspace
        - /tmp/airbyte_local:/tmp/airbyte_local
    
    server:
      image: airbyte/server:0.35.62-alpha
      logging: *default-logging
      container_name: airbyte-server
      restart: unless-stopped
      environment:
        - AIRBYTE_ROLE=${AIRBYTE_ROLE:-}
        - AIRBYTE_VERSION=0.35.62-alpha
        - CONFIG_DATABASE_PASSWORD=airbyte-passwd
        - CONFIG_DATABASE_URL=jdbc:postgresql://postgres:5432/airbyte_db
        - CONFIG_DATABASE_USER=airbyte
        - CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=0.35.15.001
        - CONFIG_ROOT=/data
        - DATABASE_PASSWORD=airbyte-passwd
        - DATABASE_URL=jdbc:postgresql://postgres:5432/airbyte_db
        - DATABASE_USER=airbyte
        - JOB_MAIN_CONTAINER_CPU_LIMIT=
        - JOB_MAIN_CONTAINER_CPU_REQUEST=
        - JOB_MAIN_CONTAINER_MEMORY_LIMIT=
        - JOB_MAIN_CONTAINER_MEMORY_REQUEST=
        - JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=0.29.15.001
        - LOG_LEVEL=INFO
        - NEW_SCHEDULER=false
        - SECRET_PERSISTENCE=${SECRET_PERSISTENCE}
        - TEMPORAL_HOST=airbyte-temporal:7233
        - TRACKING_STRATEGY=segment
        - WEBAPP_URL=http://localhost:8000/
        - WORKER_ENVIRONMENT=${WORKER_ENVIRONMENT}
        - WORKSPACE_ROOT=/tmp/workspace
      ports:
        - 8001:8001
      networks:
          etl-services: null
      volumes:
        - airbyte-workspace:/tmp/workspace
        - airbyte-data:/data
        - /tmp/airbyte_local:/tmp/airbyte_local
    
    webapp:
      image: airbyte/webapp:0.35.62-alpha
      logging: *default-logging
      container_name: airbyte-webapp
      restart: unless-stopped
      ports:
        - 8000:80
      networks:
          etl-services: null
      environment:
        - AIRBYTE_ROLE=${AIRBYTE_ROLE:-}
        - AIRBYTE_VERSION=0.35.62-alpha
        - API_URL=/api/v1/
        - FULLSTORY=${FULLSTORY:-}
        - INTERNAL_API_HOST=airbyte-server:8001
        - IS_DEMO=${IS_DEMO:-}
        - OPENREPLAY=${OPENREPLAY:-}
        - PAPERCUPS_STORYTIME=${PAPERCUPS_STORYTIME:-}
        - TRACKING_STRATEGY=segment
    
    airbyte-temporal:
      image: airbyte/temporal:0.35.62-alpha
      logging: *default-logging
      container_name: airbyte-temporal
      restart: unless-stopped
      ports:
        - 7233:7233
      environment:
        - DB=postgresql
        - DB_PORT=5432
        - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
        - LOG_LEVEL=INFO
        - POSTGRES_PWD=airbyte-passwd
        - POSTGRES_SEEDS=postgres
        - POSTGRES_USER=airbyte
      networks:
          etl-services: null
      volumes:
        - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig

networks:
    etl-services:
      name: etl-services

volumes:
    etl-db:
    airbyte-workspace:
      name: airbyte_workspace
    airbyte-data:
      name: airbyte_data
